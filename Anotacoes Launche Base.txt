Modulo 1 e 2 ( Front End)

*Podemos fazer importações também na pagina de estilos pelo comando @import "url", fontes mais claras ou escuras devem ser selecionadas na importação;
*A propriedade border-radius pode ser atribuida formatação de cada borda separadamente;
*A propriedade line-height aumenta o tamanho da linha onde se encontra o texto recomendado colocar 10px acima do tamnho da fonte;
*A propriedade max-width limita o tamnho maximo do elemento e cria uma quebra automatica caso o conteudo nao ocupe o tamanho maximo da tela podemos usar a propriedade margin 0 auto para centralizar o elemento;
*O mesmo serve para a propriedade min-width;
*:root { 
  --color-white(nome da variavel): #ffffff
}
color: var(--color-white); modo de utilização dentro de um escopo css;
*Thumbnails captura a imagem de inicio do video no youtube ou qualquer outro video;
*O width de um elemento ocupa o espaço do elemto pai;
*O display deve ser aplicado ao elemento pai que organiza os filhos;
*A propriedade filter pode alterar algumas aparencias;
*A propriedade grid deve ser usada junto com uma templte columns ou template row, a propriedade gap cria um espaçamento entre os elementos do grid;
*Position relative deve ser usada em elementos pai para o filho usar uma posição absoluta sobre ele, senão a posição absoluta será sobre a tela como um todo;
*getAtributte pega qualquer atributo do elemento html
*overflow:hidden desabilita a barra de scroll da janela de iframe
*scrolling:no,yes ou auto define se havera rolamento na pagina
*A propriedade margin cria um espaçamneto externo do conteudo, a proprieade padding cria um espaçamento interno do conteudo aumentando o tamanho do elemento
*box-sizing: border-box corrigi o problema do aumento do conteudo interno ao aplicar a propriedade padding;
*display grid tambem podem ser usado para alinhar elementos internos para não deixar o conteudo se ajustar por conta propria
*align item trata do alinhamento de uma mesma linha como se alinhasse no eixo x de umplano cartesiano só funciona com display flex e grid
align-item é utilizado em relação alinhamento horizontal só possivel aplicar me flex ou grid
justify-content é utilizado em relação alinhamento vertical também só possivel em flex ou grid


Modulo 3 ( Back End)
*window.location.href faz ser enviado a outra url

*criar rotas separadas no servidor no arquivo routes.js, basta instanciar novamente o express e utilizar o express.Router() dentro de uma variavel que pode se chamar routes 

*pseudoelement ::after ::before cria elementos apenas no css, possui uma propriedade content que pode ou não ser vazia

*transition: (qual o elemento que recebe o evento ex:width ou all) (tempo de duração ex: 700ms) (velocidade de inicio e fim ex:easy-in-out)
(delay de inicio ex:1s)

*box-shadow: 2px(eixo x) 2px(eixo y) 2px(blur=borrar) 2px(spread) color

*animation-name: up (nome da animação);
*animation-duration: 200ms (tempo de duração da animação)
*animation-fill-mode: backwards ( retorna ao estado inicial da animação)
forwards (mantem o estado final da animação)
*animation-timing-function: ease, ease-in-out, ease-out (ajusta a velocidade de entrada e saida da animação)
*animation-delay: 1s (delay inicial para começar a animação)
*animation-playstate: running (rodando), paused (espera algum comando para iniciar a animação)
*animation-direction: reverse (faz a animação rodar inversa)
*animation-interation-count: infinite (faz a animação ficar continua) ou um numero 3

*:last-child (aplica o css no ultimo filho do elemento)
*:first-child (aplica o css somente no primeiro filho)

*transform: translateY(15px) (irá se deslocar no eixo y em 15px)

@keyframe up {
  from {
    (estado inicial, podemos declarar ambos estados com % para modificar mais do que 2 estados durante a animação)
  } 
  to {
    (estado final)
  }
}

*server.use(express.urlencoded({extend:true})) (para o servidor começar a interpretar as informações passa no corpo da requisição)